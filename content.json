{"meta":{"title":"满屏荒唐言","subtitle":null,"description":null,"author":"NemoSnorks","url":"http://www.ieeer.com"},"pages":[{"title":"分类","date":"2016-07-15T20:36:09.000Z","updated":"2017-01-12T12:38:09.809Z","comments":false,"path":"categories/index.html","permalink":"http://www.ieeer.com/categories/index.html","excerpt":"","text":""},{"title":"标签云","date":"2016-07-15T20:32:03.000Z","updated":"2017-01-12T12:38:13.070Z","comments":false,"path":"tags/index.html","permalink":"http://www.ieeer.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Solutions to Android","slug":"Solutions-to-Android","date":"2017-02-21T11:23:43.000Z","updated":"2017-02-21T11:32:18.390Z","comments":true,"path":"2017/02/21/Solutions-to-Android/","link":"","permalink":"http://www.ieeer.com/2017/02/21/Solutions-to-Android/","excerpt":"","text":"本文总结了Android 开发中常见的一些错误，避免再次进坑。 permission denied for this window type在某些型号手机上，sdk中弹一个对话框时崩溃，logcat中出现下面类似的错误，解决办法就是在加上android.permission.SYSTEM_ALERT_WINDOW权限。1234502-21 16:45:47.607: E/AndroidRuntime(25443): android.view.WindowManager$BadTokenException: Unable to add window android.view.ViewRootImpl$W@260c81bf -- permission denied for this window type02-21 16:45:47.607: E/AndroidRuntime(25443): at android.view.ViewRootImpl.setView(ViewRootImpl.java:809)02-21 16:45:47.607: E/AndroidRuntime(25443): at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:298)02-21 16:45:47.607: E/AndroidRuntime(25443): at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:91)02-21 16:45:47.607: E/AndroidRuntime(25443): at android.app.Dialog.show(Dialog.java:325) …","categories":[{"name":"Dev","slug":"Dev","permalink":"http://www.ieeer.com/categories/Dev/"},{"name":"Android","slug":"Dev/Android","permalink":"http://www.ieeer.com/categories/Dev/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://www.ieeer.com/tags/Android/"}]},{"title":"Mysql Partition","slug":"Mysql-Partition","date":"2017-01-18T09:06:53.000Z","updated":"2017-03-17T06:19:15.609Z","comments":true,"path":"2017/01/18/Mysql-Partition/","link":"","permalink":"http://www.ieeer.com/2017/01/18/Mysql-Partition/","excerpt":"建表123456789101112131415161718192021222324252627282930DROP TABLE IF EXISTS checkin;CREATE TABLE IF NOT EXISTS checkin ( token varchar(50) NOT NULL, imei varchar(50) NOT NULL DEFAULT '', imsi varchar(50) DEFAULT NULL, mac varchar(50) DEFAULT NULL, channel varchar(50) DEFAULT NULL, in_time datetime NOT NULL DEFAULT '0000-00-00 00:00:00', ex1 varchar(50) DEFAULT NULL, ex2 varchar(50) DEFAULT NULL, KEY channel (channel), KEY imei (imei)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='签到'PARTITION BY RANGE (TO_DAYS(in_time))( PARTITION p20160819 VALUES LESS THAN (TO_DAYS('2016-08-19')), PARTITION p20160820 VALUES LESS THAN (TO_DAYS('2016-08-20')), PARTITION p20160821 VALUES LESS THAN (TO_DAYS('2016-08-21')), PARTITION p20160822 VALUES LESS THAN (TO_DAYS('2016-08-22')), PARTITION p20160823 VALUES LESS THAN (TO_DAYS('2016-08-23')), PARTITION p20160824 VALUES LESS THAN (TO_DAYS('2016-08-24')), PARTITION p20160825 VALUES LESS THAN (TO_DAYS('2016-08-25')), PARTITION p20160826 VALUES LESS THAN (TO_DAYS('2016-08-26')), PARTITION p20160827 VALUES LESS THAN (TO_DAYS('2016-08-27')), PARTITION p20160828 VALUES LESS THAN (TO_DAYS('2016-08-28')), PARTITION p20160829 VALUES LESS THAN (TO_DAYS('2016-08-29')), PARTITION p20160830 VALUES LESS THAN (TO_DAYS('2016-08-30')), PARTITION p20160831 VALUES LESS THAN (TO_DAYS('2016-08-31')), PARTITION p20160901 VALUES LESS THAN (TO_DAYS('2016-09-01')), PARTITION p20160902 VALUES LESS THAN (TO_DAYS('2016-09-02')));","text":"建表123456789101112131415161718192021222324252627282930DROP TABLE IF EXISTS checkin;CREATE TABLE IF NOT EXISTS checkin ( token varchar(50) NOT NULL, imei varchar(50) NOT NULL DEFAULT '', imsi varchar(50) DEFAULT NULL, mac varchar(50) DEFAULT NULL, channel varchar(50) DEFAULT NULL, in_time datetime NOT NULL DEFAULT '0000-00-00 00:00:00', ex1 varchar(50) DEFAULT NULL, ex2 varchar(50) DEFAULT NULL, KEY channel (channel), KEY imei (imei)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='签到'PARTITION BY RANGE (TO_DAYS(in_time))( PARTITION p20160819 VALUES LESS THAN (TO_DAYS('2016-08-19')), PARTITION p20160820 VALUES LESS THAN (TO_DAYS('2016-08-20')), PARTITION p20160821 VALUES LESS THAN (TO_DAYS('2016-08-21')), PARTITION p20160822 VALUES LESS THAN (TO_DAYS('2016-08-22')), PARTITION p20160823 VALUES LESS THAN (TO_DAYS('2016-08-23')), PARTITION p20160824 VALUES LESS THAN (TO_DAYS('2016-08-24')), PARTITION p20160825 VALUES LESS THAN (TO_DAYS('2016-08-25')), PARTITION p20160826 VALUES LESS THAN (TO_DAYS('2016-08-26')), PARTITION p20160827 VALUES LESS THAN (TO_DAYS('2016-08-27')), PARTITION p20160828 VALUES LESS THAN (TO_DAYS('2016-08-28')), PARTITION p20160829 VALUES LESS THAN (TO_DAYS('2016-08-29')), PARTITION p20160830 VALUES LESS THAN (TO_DAYS('2016-08-30')), PARTITION p20160831 VALUES LESS THAN (TO_DAYS('2016-08-31')), PARTITION p20160901 VALUES LESS THAN (TO_DAYS('2016-09-01')), PARTITION p20160902 VALUES LESS THAN (TO_DAYS('2016-09-02'))); 存储过程1234567891011121314151617181920212223242526272829303132333435DELIMITER $$---- 存储过程--DROP PROCEDURE IF EXISTS `create_Partition_checkin`$$CREATE DEFINER=`root`@`%` PROCEDURE `create_Partition_checkin`()BEGIN DECLARE EXIT HANDLER FOR SQLEXCEPTION ROLLBACK; START TRANSACTION; /* 得到日期最新的分区，日期加一天 */ SELECT REPLACE(partition_name,'p','') INTO @P12_Name FROM INFORMATION_SCHEMA.PARTITIONS WHERE table_name='checkin' ORDER BY partition_ordinal_position DESC LIMIT 1; SET @Max_date= DATE(DATE_ADD(@P12_Name+0, INTERVAL 1 DAY))+0; /* 创建新的分区 */ SET @s1=CONCAT('ALTER TABLE checkin ADD PARTITION (PARTITION p',@Max_date,' VALUES LESS THAN (TO_DAYS (''',DATE(@Max_date),''')))'); SELECT @s1; PREPARE stmt2 FROM @s1; EXECUTE stmt2; DEALLOCATE PREPARE stmt2; /* 删除日期最旧的分区 */ select partition_name into @P0_Name from INFORMATION_SCHEMA.PARTITIONS where table_name='checkin' order by partition_ordinal_position limit 1; SET @s=concat('ALTER TABLE checkin DROP PARTITION ',@P0_Name); PREPARE stmt1 FROM @s; EXECUTE stmt1; DEALLOCATE PREPARE stmt1; COMMIT ; END$$ DELIMITER ; 事件1234567891011DELIMITER $$---- 事件--DROP EVENT `Partition_checkin_event`$$CREATE DEFINER=root@`%` EVENT Partition_checkin_event ON SCHEDULE EVERY 1 DAY STARTS '2016-08-31 23:59:59' ON COMPLETION NOT PRESERVE ENABLE DO BEGIN CALL cms.`create_Partition_checkin`; END$$ DELIMITER ;","categories":[{"name":"Dev","slug":"Dev","permalink":"http://www.ieeer.com/categories/Dev/"},{"name":"Database","slug":"Dev/Database","permalink":"http://www.ieeer.com/categories/Dev/Database/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.ieeer.com/tags/Mysql/"},{"name":"Partition","slug":"Partition","permalink":"http://www.ieeer.com/tags/Partition/"}]},{"title":"A Simple and Common Pageable Interface and Implement in J2EE","slug":"A-Simple-and-Common-Pageable-Interface-and-Implement-in-J2EE","date":"2017-01-17T07:12:03.000Z","updated":"2017-01-17T07:30:11.056Z","comments":true,"path":"2017/01/17/A-Simple-and-Common-Pageable-Interface-and-Implement-in-J2EE/","link":"","permalink":"http://www.ieeer.com/2017/01/17/A-Simple-and-Common-Pageable-Interface-and-Implement-in-J2EE/","excerpt":"一个简单、通用的分页方案，适用于中小型项目。 Pageable 接口12345678910111213141516171819202122232425262728293031323334public interface Pageable &#123; /**返回总页数 */ int getPageCount(); /**返回当前页的记录条数 */ int getPageRowsCount(); /**返回分页大小 */ int getPageSize(); /**转到指定页 */ void gotoPage(int page) ; /**设置分页大小 */ void setPageSize(int pageSize); /**返回总记录行数 */ int getRowsCount(); /** * 转到当前页的第一条记录 * @exception java.sql.SQLException 异常说明。 */ void pageFirst() throws java.sql.SQLException; /** * 转到当前页的最后一条记录 * @exception java.sql.SQLException 异常说明。 */ void pageLast() throws java.sql.SQLException; /**返回当前页号 */ int getCurPage();&#125;","text":"一个简单、通用的分页方案，适用于中小型项目。 Pageable 接口12345678910111213141516171819202122232425262728293031323334public interface Pageable &#123; /**返回总页数 */ int getPageCount(); /**返回当前页的记录条数 */ int getPageRowsCount(); /**返回分页大小 */ int getPageSize(); /**转到指定页 */ void gotoPage(int page) ; /**设置分页大小 */ void setPageSize(int pageSize); /**返回总记录行数 */ int getRowsCount(); /** * 转到当前页的第一条记录 * @exception java.sql.SQLException 异常说明。 */ void pageFirst() throws java.sql.SQLException; /** * 转到当前页的最后一条记录 * @exception java.sql.SQLException 异常说明。 */ void pageLast() throws java.sql.SQLException; /**返回当前页号 */ int getCurPage();&#125; PageableResultSet 实现12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485public class PageableResultSet implements Pageable &#123; protected ResultSet rs = null; protected int rowsCount; protected int pageSize; protected int curPage; public PageableResultSet(ResultSet rs) throws SQLException &#123; if (rs == null) throw new SQLException(\"given ResultSet is NULL\", \"user\"); rs.last(); rowsCount = rs.getRow(); rs.beforeFirst(); this.rs = rs; &#125; public int getCurPage() &#123; return curPage; &#125; public int getPageCount() &#123; if (rowsCount == 0) return 0; if (pageSize == 0) return 1; // calculate PageCount double tmpD = (double) rowsCount / pageSize; int tmpI = (int) tmpD; if (tmpD &gt; tmpI) tmpI++; return tmpI; &#125; public int getPageRowsCount() &#123; if (pageSize == 0) return rowsCount; if (getRowsCount() == 0) return 0; if (curPage != getPageCount()) return pageSize; return rowsCount - (getPageCount() - 1) * pageSize; &#125; public int getPageSize() &#123; return pageSize; &#125; public int getRowsCount() &#123; return rowsCount; &#125; public void gotoPage(int page) &#123; if (rs == null) return; if (page &lt; 1) page = 1; if (page &gt; getPageCount()) page = getPageCount(); int row = (page - 1) * pageSize + 1; try &#123; rs.absolute(row); curPage = page; &#125; catch (SQLException e) &#123; &#125; &#125; public void pageFirst() throws SQLException &#123; int row = (curPage - 1) * pageSize + 1; rs.absolute(row); &#125; public void pageLast() throws SQLException &#123; int row = (curPage - 1) * pageSize + getPageRowsCount(); rs.absolute(row); &#125; public void setPageSize(int pageSize) &#123; if (pageSize &gt;= 0) &#123; this.pageSize = pageSize; curPage = 1; &#125; &#125;&#125; 使用 PageableResultSet12345678910111213141516171819202122// PreparedStatement ps = null;ResultSet rs = null;try &#123; String query = \"\"; ps = Database.getConnection().prepareStatement(query); rs = ps.executeQuery(); PageableResultSet pageableResultSet = new PageableResultSet(rs); pageableResultSet.setPageSize(10); pageableResultSet.gotoPage(100); for(int i = 0; i &lt; pageableResultSet.getPageRowsCount(); i++) &#123; /* */ rs.next(); &#125;&#125; catch (Exception e) &#123; e.printStackTrace();&#125;//","categories":[{"name":"Dev","slug":"Dev","permalink":"http://www.ieeer.com/categories/Dev/"},{"name":"J2EE","slug":"Dev/J2EE","permalink":"http://www.ieeer.com/categories/Dev/J2EE/"}],"tags":[{"name":"JDBC","slug":"JDBC","permalink":"http://www.ieeer.com/tags/JDBC/"},{"name":"Page","slug":"Page","permalink":"http://www.ieeer.com/tags/Page/"}]},{"title":"Introduction to jOOR","slug":"Introduction-to-jOOR","date":"2017-01-16T07:10:34.000Z","updated":"2017-01-16T07:20:02.552Z","comments":true,"path":"2017/01/16/Introduction-to-jOOR/","link":"","permalink":"http://www.ieeer.com/2017/01/16/Introduction-to-jOOR/","excerpt":"","text":"jOOR stands for Java Object Oriented Reflection. It is a simple wrapper for the java.lang.reflect package. Simple Example12345678// All examples assume the following static import:import static org.joor.Reflect.*;String world = on(\"java.lang.String\") // Like Class.forName() .create(\"Hello World\") // Call most specific matching constructor .call(\"substring\", 6) // Call most specific matching substring() method .call(\"toString\") // Call toString() .get(); // Get the wrapped object, in this case a String See github for details.","categories":[{"name":"Dev","slug":"Dev","permalink":"http://www.ieeer.com/categories/Dev/"},{"name":"Java","slug":"Dev/Java","permalink":"http://www.ieeer.com/categories/Dev/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://www.ieeer.com/tags/Java/"},{"name":"Reflection","slug":"Reflection","permalink":"http://www.ieeer.com/tags/Reflection/"}]},{"title":"Base Adapter Helper","slug":"Base-Adapter-Helper","date":"2017-01-16T03:38:24.000Z","updated":"2017-01-16T03:51:44.061Z","comments":true,"path":"2017/01/16/Base-Adapter-Helper/","link":"","permalink":"http://www.ieeer.com/2017/01/16/Base-Adapter-Helper/","excerpt":"","text":"Abstraction for the usual BaseAdapter “ViewHolder” pattern.See github for details. 1234567891011121314adapter = new QuickAdapter&lt;Status&gt;(this, R.layout.tweet) &#123; @Override protected void convert(BaseAdapterHelper helper, Status status) &#123; boolean isRetweet = status.isRetweet(); if (isRetweet) status = status.getRetweetedStatus(); helper.setText(tweetText, status.getText()) .setVisible(tweetRT, isRetweet) .setText(tweetName, status.getUser().getName()) .setText(tweetDate, dateFormat.format(status.getCreatedAt())) .setImageUrl(tweetAvatar, status.getUser().getProfileImageURL()) .linkify(tweetText); &#125; &#125;;","categories":[{"name":"Dev","slug":"Dev","permalink":"http://www.ieeer.com/categories/Dev/"},{"name":"Android","slug":"Dev/Android","permalink":"http://www.ieeer.com/categories/Dev/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://www.ieeer.com/tags/Android/"}]},{"title":"Solutions to Maven J2EE Project","slug":"Solutions-to-Maven-J2EE-Project","date":"2017-01-12T07:32:15.000Z","updated":"2017-01-16T03:53:44.402Z","comments":true,"path":"2017/01/12/Solutions-to-Maven-J2EE-Project/","link":"","permalink":"http://www.ieeer.com/2017/01/12/Solutions-to-Maven-J2EE-Project/","excerpt":"","text":"本文总结了Maven J2EE 项目中常见的一些错误，避免再次进坑。 Tomcat 启动包冲突Tomcat 启动出现如下错误：1java.io.IOException: java.lang.ClassCastException: Cannot cast org.springframework.web.SpringServlet 原因tomcat 启动后先将tomcat/lib目录下的jar包全部读入内存，如果webapps目录里的应用程序中WEB-INF/lib目录下有相同的包，将无法加载，不同版本的包之间也会造成类似问题。 解决办法 1234567&lt;scope&gt;provided&lt;/scope&gt;&lt;dependency&gt; &lt;groupId&gt;javax&lt;/groupId&gt; &lt;scope&gt;provided&lt;/scope&gt; &lt;artifactId&gt;javaee-api&lt;/artifactId&gt; &lt;version&gt;7.0&lt;/version&gt;&lt;/dependency&gt; Maven-update project 报错Maven项目，右键Maven-update project后报错如下的解决办法： 123456789101112&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;source&gt;1.7&lt;/source&gt; &lt;target&gt;1.7&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; …","categories":[{"name":"Dev","slug":"Dev","permalink":"http://www.ieeer.com/categories/Dev/"},{"name":"J2EE","slug":"Dev/J2EE","permalink":"http://www.ieeer.com/categories/Dev/J2EE/"}],"tags":[{"name":"Maven","slug":"Maven","permalink":"http://www.ieeer.com/tags/Maven/"},{"name":"Tomcat","slug":"Tomcat","permalink":"http://www.ieeer.com/tags/Tomcat/"}]},{"title":"Add a Jar to Maven","slug":"Add-a-Jar-to-Maven","date":"2017-01-12T07:10:16.000Z","updated":"2017-01-16T02:29:10.231Z","comments":true,"path":"2017/01/12/Add-a-Jar-to-Maven/","link":"","permalink":"http://www.ieeer.com/2017/01/12/Add-a-Jar-to-Maven/","excerpt":"Maven does not directly support some libraries, like Microsoft’s SQL Server JDBC. This tutorial will show you how to add an external dependency to your local Maven repository. It assumes you have already installed Maven. Download the JDBC driver for Microsoft SQL Server1, Visit the MSDN site for SQL Server and download the latest version of the JDBC driver for your operating system.2, Unzip the package3, Open a command prompt and switch into the expanded directory where the jar file is located.4, Execute the following command. Be sure to modify the jar file name and version as necessary: 1mvn install:install-file -Dfile=sqljdbc4.jar -Dpackaging=jar -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0","text":"Maven does not directly support some libraries, like Microsoft’s SQL Server JDBC. This tutorial will show you how to add an external dependency to your local Maven repository. It assumes you have already installed Maven. Download the JDBC driver for Microsoft SQL Server1, Visit the MSDN site for SQL Server and download the latest version of the JDBC driver for your operating system.2, Unzip the package3, Open a command prompt and switch into the expanded directory where the jar file is located.4, Execute the following command. Be sure to modify the jar file name and version as necessary: 1mvn install:install-file -Dfile=sqljdbc4.jar -Dpackaging=jar -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0 5, You should see something similar to this: 12345678910111213141516171819[INFO] Scanning forprojects...[INFO][INFO] ------------------------------------------------------------------------[INFO] Building Maven Stub Project (No POM) 1[INFO] ------------------------------------------------------------------------[INFO][INFO] --- maven-install-plugin:2.3.1:install-file(default-cli) @ standalone-pom ---[INFO] Installing /Users/claude/installers/JDBC/sqljdbc_4.0/enu/sqljdbc4.jar to/Users/claude/.m2/repository/com/microsoft/sqlserver/sqljdbc4/4.0/sqljdbc4-4.0.jar[INFO] Installing/var/folders/c6/q1bdtq557kv54783p1g6cbsw0000gp/T/mvninstall1874482299687761721.pom to /Users/claude/.m2/repository/com/microsoft/sqlserver/sqljdbc4/4.0/sqljdbc4-4.0.pom[INFO] ------------------------------------------------------------------------[INFO] BUILD SUCCESS[INFO] ------------------------------------------------------------------------[INFO] Total time: 1.208s[INFO] Finished at: Tue Mar 13 14:07:31 EDT 2012[INFO] Final Memory: 3M/81M[INFO] ------------------------------------------------------------------------ Modify your POMInclude the new dependency by modifying your project’s pom.xml. Add the following dependency: 12345&lt;dependency&gt; &lt;groupId&gt;com.microsoft.sqlserver&lt;/groupId&gt; &lt;artifactId&gt;sqljdbc4&lt;/artifactId&gt; &lt;version&gt;4.0&lt;/version&gt;&lt;/dependency&gt; Save the pom.xml file and build the project to make sure no errors exist. 本文来自: 原文链接","categories":[{"name":"Tool","slug":"Tool","permalink":"http://www.ieeer.com/categories/Tool/"}],"tags":[{"name":"Maven","slug":"Maven","permalink":"http://www.ieeer.com/tags/Maven/"}]},{"title":"Method For Deleting .svn in Windows","slug":"Method-for-Deleting-SVN-in-Windows","date":"2017-01-09T07:50:00.000Z","updated":"2017-01-16T02:33:57.933Z","comments":true,"path":"2017/01/09/Method-for-Deleting-SVN-in-Windows/","link":"","permalink":"http://www.ieeer.com/2017/01/09/Method-for-Deleting-SVN-in-Windows/","excerpt":"","text":"今天看了 Jon Galloway 的一个注册表脚本，十分方便，分享如下： 建立一个文本文件，取名为kill-svn-folders.reg（扩展名由txt改为reg），内容如下： 12345Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Folder\\shell\\DeleteSVN] @=\"Delete SVN Folders\"[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Folder\\shell\\DeleteSVN\\command] @=\"cmd.exe /c \\\"TITLE Removing SVN Folders in %1 &amp;&amp; COLOR 9A &amp;&amp; FOR /r \\\"%1\\\" %%f IN (.svn) DO RD /s /q \\\"%%f\\\" \\\"\" 保存之后，双击这个reg文件。成功后，在每一个文件夹上点击右键都会有一个“Delete SVN Folders”的选项，点击之后，就可以删除这个文件下下面所有的.svn文件了。 本文来自: 原文链接","categories":[{"name":"Tool","slug":"Tool","permalink":"http://www.ieeer.com/categories/Tool/"}],"tags":[{"name":"SVN","slug":"SVN","permalink":"http://www.ieeer.com/tags/SVN/"}]}]}